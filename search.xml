<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>数据结构作业——P53页算法设计题（7）：原地逆转链表</title>
      <link href="%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BD%9C%E4%B8%9A%E2%80%94%E2%80%94P53%E9%A1%B5%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E9%A2%98%EF%BC%887%EF%BC%89%EF%BC%9A%E5%8E%9F%E5%9C%B0%E9%80%86%E8%BD%AC%E9%93%BE%E8%A1%A8.html"/>
      <url>%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BD%9C%E4%B8%9A%E2%80%94%E2%80%94P53%E9%A1%B5%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E9%A2%98%EF%BC%887%EF%BC%89%EF%BC%9A%E5%8E%9F%E5%9C%B0%E9%80%86%E8%BD%AC%E9%93%BE%E8%A1%A8.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="一、-题目描述："><a href="#一、-题目描述：" class="headerlink" title="一、 题目描述："></a>一、 题目描述：</h1><p>   <strong>设计一个算法，将链表中所有结点的链接方向“原地”逆转，即要求仅利用原表的存储空间，换句话说，要求算法的空间复杂度为O(1)。</strong></p><h1 id="二、算法设计"><a href="#二、算法设计" class="headerlink" title="二、算法设计"></a>二、算法设计</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">*课本p53 页第七题</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ElemType int</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">LNode</span>&#123;</span></span><br><span class="line">    ElemType data;   <span class="comment">//定义数据域</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">LNode</span> *<span class="title">next</span>;</span></span><br><span class="line">&#125;LNode,*LinkList;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CreateList</span><span class="params">(LinkList &amp;L)</span></span>&#123;</span><br><span class="line">    L = <span class="keyword">new</span> LNode;      <span class="comment">//申请存储空间</span></span><br><span class="line">    L-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;请输入单链表长度：&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    LinkList r =L;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;请输入单链表的数据元素：&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        LinkList p = <span class="keyword">new</span> LNode;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;p-&gt;data;</span><br><span class="line">        p-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">        r-&gt;next = p;</span><br><span class="line">        r = p;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Display</span><span class="params">(LinkList &amp;L)</span></span>&#123;</span><br><span class="line">    LinkList p = L-&gt;next;</span><br><span class="line">    <span class="keyword">while</span>(p)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;p-&gt;data&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">TurnList</span><span class="params">(LinkList &amp;L)</span></span>&#123;   <span class="comment">//逆转链接结点</span></span><br><span class="line">    LinkList p,q,r;</span><br><span class="line">p=L-&gt;next;<span class="comment">//记录list下一个结点的指针</span></span><br><span class="line">q=L-&gt;next-&gt;next;<span class="comment">//记录list下下一个结点的指针</span></span><br><span class="line">r=L-&gt;next-&gt;next-&gt;next;<span class="comment">//记录list下下下一个结点的指针</span></span><br><span class="line"><span class="keyword">while</span>(r)</span><br><span class="line">&#123;</span><br><span class="line">q-&gt;next=p;<span class="comment">//将一个结点的指针赋给下一个结点的指针域</span></span><br><span class="line">p=q;</span><br><span class="line">q=r;</span><br><span class="line">r=r-&gt;next;<span class="comment">//指针p,q,r整体往右移一位</span></span><br><span class="line">&#125;</span><br><span class="line">r=q;<span class="comment">//记录最后一位元素的指针</span></span><br><span class="line">q-&gt;next=p;<span class="comment">//将倒数第二个元素的指针赋给最后一位元素的指针域</span></span><br><span class="line">L-&gt;next-&gt;next=<span class="literal">NULL</span>;<span class="comment">//将第一个元素的指针域设为NULL</span></span><br><span class="line">L-&gt;next=r;<span class="comment">//将最后一个元素的指针赋给原本头结点指针的指针域</span></span><br><span class="line">Display(L);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;P53页第7题：&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    LinkList L;</span><br><span class="line">    CreateList(L);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;新创建好的单链表为：&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    Display(L);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;逆转后的新表为：&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    TurnList(L);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>以上内容在我的个人博客有更详细的解说，请大家移步<a href="https://weiyuexin.top/">我的博客</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Google Chrome调整控制台的位置</title>
      <link href="Google-Chrome%E8%B0%83%E6%95%B4%E6%8E%A7%E5%88%B6%E5%8F%B0%E7%9A%84%E4%BD%8D%E7%BD%AE.html"/>
      <url>Google-Chrome%E8%B0%83%E6%95%B4%E6%8E%A7%E5%88%B6%E5%8F%B0%E7%9A%84%E4%BD%8D%E7%BD%AE.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>众所周知，控制台是开发必备的工具，学会流畅的使用控制台会给我们的开发带来不一样的体验，但是控制台的位置有时却是困扰我们的一件事，控制台默认是在浏览器内，有时十分妨碍我们，那么有没有什么办法修改控制台的位置哪？</p><p>经过不断的尝试，我终于找到了方法。</p><ol><li>F12打开控制台，是酱色儿的:<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20201022102702486.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjM1MzM2Ng==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>控制台默认在浏览器最下方，然后我们要怎么修改哪？</li><li>点击右上角的三个点，<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20201022102907408.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjM1MzM2Ng==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></li><li>选择Dock side，效果依次如下：<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20201022103044781.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjM1MzM2Ng==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/2020102210311430.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjM1MzM2Ng==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20201022103146834.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjM1MzM2Ng==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></li></ol><p><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20201022103213755.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjM1MzM2Ng==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>]]></content>
      
      
      <categories>
          
          <category> 软件使用技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件使用技巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>设置div背景透明的两种方法</title>
      <link href="%E8%AE%BE%E7%BD%AEdiv%E8%83%8C%E6%99%AF%E9%80%8F%E6%98%8E%E7%9A%84%E4%B8%A4%E7%A7%8D%E6%96%B9%E6%B3%95.html"/>
      <url>%E8%AE%BE%E7%BD%AEdiv%E8%83%8C%E6%99%AF%E9%80%8F%E6%98%8E%E7%9A%84%E4%B8%A4%E7%A7%8D%E6%96%B9%E6%B3%95.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><h2 id="实现div背景透明的两种方法"><a href="#实现div背景透明的两种方法" class="headerlink" title="实现div背景透明的两种方法"></a>实现div背景透明的两种方法</h2><hr><p> <strong><em>1.使用opacity属性</em></strong> </p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">background-color：#<span class="number">000</span>;</span><br><span class="line">opacity: <span class="number">0.5</span>;</span><br></pre></td></tr></table></figure><p><strong>这样做可以设置div内部所以区域的透明度，但是也会影响里面的文字，效果图：</strong><br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200707120408884.png" alt="在这里插入图片描述"><br><strong><em>2、只改变背景透明度，不改变其中文字、图片等透明度的方法</em></strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">background-color: rgba(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.5</span>);</span><br></pre></td></tr></table></figure><p><strong>其中前三位数是设置背景颜色，取值范围是0~255，全部为零代表黑色，全部为255代表白色。</strong><br>rgba即红色、绿色、蓝色、透明度（英语：Red, Green, Blue、Alpha）。</p><p>红色（R）0 到 255 间的整数，代表颜色中的红色成分。。<br>绿色（G）0 到 255 间的整数，代表颜色中的绿色成分。<br>蓝色（B）0 到 255 间的整数，代表颜色中的蓝色成分。<br>透明度（A）取值 0~1 之间， 代表透明度。<br><strong>效果图：</strong><br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200707121024419.png" alt="在这里插入图片描述"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Sublime Text 3结合Chrome实现网页的自动刷新</title>
      <link href="Sublime-Text-3%E7%BB%93%E5%90%88Chrome%E5%AE%9E%E7%8E%B0%E7%BD%91%E9%A1%B5%E7%9A%84%E8%87%AA%E5%8A%A8%E5%88%B7%E6%96%B0.html"/>
      <url>Sublime-Text-3%E7%BB%93%E5%90%88Chrome%E5%AE%9E%E7%8E%B0%E7%BD%91%E9%A1%B5%E7%9A%84%E8%87%AA%E5%8A%A8%E5%88%B7%E6%96%B0.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="我们在编写前端代码时，写好一部分代码时想要看一看代码的实现效果，每次都要手动刷新会非常麻烦，神器来了，LiveReload插件实现网页的实时刷新，操作方法如下："><a href="#我们在编写前端代码时，写好一部分代码时想要看一看代码的实现效果，每次都要手动刷新会非常麻烦，神器来了，LiveReload插件实现网页的实时刷新，操作方法如下：" class="headerlink" title="我们在编写前端代码时，写好一部分代码时想要看一看代码的实现效果，每次都要手动刷新会非常麻烦，神器来了，LiveReload插件实现网页的实时刷新，操作方法如下："></a><strong><em>我们在编写前端代码时，写好一部分代码时想要看一看代码的实现效果，每次都要手动刷新会非常麻烦，神器来了，LiveReload插件实现网页的实时刷新，操作方法如下：</em></strong></h2><p> <strong>1. 官网下载<a href="https://www.sublimetext.com/3">Sublime Text 3</a></strong><br> 根据自己的电脑版本选择相应的安装包，这里我选择的是Windows 64-bit，下载完成后默认安装即可<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200706185940167.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjM1MzM2Ng==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br> <strong>2. 安装Package Control</strong><br> 安装完成后打开Sublime Text 3，使用快捷键Ctrl+` 打开控制台，输入一下代码并回车</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import urllib.request,os,hashlib; h = &#x27;df21e130d211cfc94d9b0905775a7c0f&#x27; + &#x27;1e3d39e33b79698005270310898eea76&#x27;; pf = &#x27;Package Control.sublime-package&#x27;; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( &#x27;http://packagecontrol.io/&#x27; + pf.replace(&#x27; &#x27;, &#x27;%20&#x27;)).read(); dh = hashlib.sha256(by).hexdigest(); print(&#x27;Error validating download (got %s instead of %s), please try manual install&#x27; % (dh, h)) if dh != h else open(os.path.join( ipp, pf), &#x27;wb&#x27; ).write(by)</span><br></pre></td></tr></table></figure><p>完成后再Preferences下出现Package Control即为安装成功<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200706192043110.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjM1MzM2Ng==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><ol><li><p><strong><em>使用Package Control安装插件的方法：</em></strong></p><p>快捷键<em>ctrl+shift+p</em>调出Package Control，输入ip，选择<em>Install Package</em>回车，等待几分钟。<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200706192515153.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjM1MzM2Ng==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>输入要安装的插件名回车即可安装<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200706192634161.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjM1MzM2Ng==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><strong>3.Sublime Text 3安装LiveReload</strong><br>接上一步，输入LiveReload，回车，等待安装完成<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200706193330760.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjM1MzM2Ng==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p></li></ol><p> <strong>4.谷歌Chrome安装LiveReload插件</strong><br> 打开<br>Chrome网上应用商店（ps：自己想办法或者网上搜教程），搜索LiveReload，并添加到Chrome<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200706194334305.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjM1MzM2Ng==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><strong>5.添加完成后浏览器右上角会出现一个小圆环，如下：</strong><br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200706194844248.png" alt="在这里插入图片描述"><br>右键小圆环，选择管理拓展程序，开启允许访问文件网址<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200706195011759.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjM1MzM2Ng==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><strong>6.打开想要实现实时刷新的网页文件，点击右上角小圆环，小圆环中间的校园点变成实心即可</strong><br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/202007061952560.png" alt="在这里插入图片描述"><br><strong>7、Sublime Text 3打开，快捷键Ctrl+shift+p，键入livereload，选择livereload：Enable/disable plug-ins回车即可。</strong><br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200706195626706.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjM1MzM2Ng==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><strong>8.在Preferences中选择settings-user，输入以下代码并保存</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">&quot;enabled_plugins&quot;</span>: [<span class="string">&quot;SimpleReloadPlugin&quot;</span>,<span class="string">&quot;SimpleRefresh&quot;</span>]&#125;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200709210345200.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjM1MzM2Ng==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><strong><em>9.网页源码更新后Ctrl+S保存后，网页会同时刷新，是不是感觉一下子就方便了很多，省时又省力，哈哈哈！！！</em></strong></p>]]></content>
      
      
      <categories>
          
          <category> 软件使用技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件使用技巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++输出控制小数点后位数的方法</title>
      <link href="C-%E8%BE%93%E5%87%BA%E6%8E%A7%E5%88%B6%E5%B0%8F%E6%95%B0%E7%82%B9%E5%90%8E%E4%BD%8D%E6%95%B0%E7%9A%84%E6%96%B9%E6%B3%95.html"/>
      <url>C-%E8%BE%93%E5%87%BA%E6%8E%A7%E5%88%B6%E5%B0%8F%E6%95%B0%E7%82%B9%E5%90%8E%E4%BD%8D%E6%95%B0%E7%9A%84%E6%96%B9%E6%B3%95.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><h2 id="以C-输出小数点两位数为例"><a href="#以C-输出小数点两位数为例" class="headerlink" title="以C++输出小数点两位数为例"></a>以C++输出小数点两位数为例</h2><p><em>setprecision(n)使用方法总结</em></p><p>首先要记住写头文件</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iomanip&gt;  //不要忘了头文件</span></span></span><br></pre></td></tr></table></figure><p>以下是控制小数位数的三种写法</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//the first</span></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;setiosflags(ios::fixed)&lt;&lt;setprecision(<span class="number">2</span>);</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//the second</span></span><br><span class="line"><span class="built_in">cout</span>.setf(ios::fixed);</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;setprecision(<span class="number">2</span>);</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//the third</span></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;fixed&lt;&lt;setprecision(<span class="number">2</span>);</span><br></pre></td></tr></table></figure><ul><li>想要保留几位小数setprecision(n)中n就写成几</li><li>一定要记得写头文件##</li></ul>]]></content>
      
      
      <categories>
          
          <category> C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git从远程仓库克隆</title>
      <link href="Git%E4%BB%8E%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93%E5%85%8B%E9%9A%86.html"/>
      <url>Git%E4%BB%8E%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93%E5%85%8B%E9%9A%86.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>首先，登陆GitHub，创建一个新的仓库，名字叫<code>gitskills</code></p><p>勾选<code>Initialize this repository with a README</code>，这样GitHub会自动为我们创建一个<code>README.md</code>文件。<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200524124240777.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjM1MzM2Ng==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>复制仓库地址<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200524124719772.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjM1MzM2Ng==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>现在，远程库已经准备好了，下一步是用命令<code>git clone</code>克隆一个本地库：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git clone  git@github.com:xxxxxx&#x2F;gitskills.git</span><br></pre></td></tr></table></figure><p>结果如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Cloning into &#39;gitskills&#39;...</span><br><span class="line">remote: Counting objects: 3, done.</span><br><span class="line">remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 3</span><br><span class="line">Receiving objects: 100% (3&#x2F;3), done.</span><br></pre></td></tr></table></figure><p>注意把Git库的地址换成你自己的，然后进入<code>gitskills</code>目录看看，已经有<code>README.md</code>文件了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ cd gitskills</span><br><span class="line">$ ls</span><br><span class="line">README.md</span><br></pre></td></tr></table></figure><p>GitHub给出的地址不止一个，还可以用<code>https://github.com/xxxxxx/gitskills.git</code>这样的地址，实际上，Git支持多种协议，默认的<code>git://</code>使用ssh，但也可以使用<code>https</code>等其他协议。<br>使用<code>https</code>除了速度慢以外，还有个最大的麻烦是每次推送都必须输入口令，但是在某些只开放<code>http</code>端口的公司内部就无法使用<code>ssh</code>协议而只能用<code>https</code>。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Git &amp; GitHub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++判断月份天数（判断闰年）</title>
      <link href="C-%E5%88%A4%E6%96%AD%E6%9C%88%E4%BB%BD%E5%A4%A9%E6%95%B0%EF%BC%88%E5%88%A4%E6%96%AD%E9%97%B0%E5%B9%B4%EF%BC%89.html"/>
      <url>C-%E5%88%A4%E6%96%AD%E6%9C%88%E4%BB%BD%E5%A4%A9%E6%95%B0%EF%BC%88%E5%88%A4%E6%96%AD%E9%97%B0%E5%B9%B4%EF%BC%89.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><strong>题目描述</strong><br>输入年份和月份，输出这一年的这一月有多少天。需要考虑闰年。</p><p><strong>输入格式</strong><br>无</p><p><strong>输出格式</strong><br>无</p><p><strong>输入输出样例</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入 #<span class="number">1</span>                           输出 #<span class="number">1</span></span><br><span class="line"><span class="number">1926</span> <span class="number">8</span>                             <span class="number">31</span></span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入 #<span class="number">2</span>                          输出 #<span class="number">2</span></span><br><span class="line"><span class="number">2000</span> <span class="number">2</span>                            <span class="number">29</span></span><br></pre></td></tr></table></figure><p><strong>闰年判断方法：</strong><br>（1）若某个年份能被4整除但不能被100整除，则是闰年。<br>（2）若某个年份能被400整除，则也是闰年。<br><strong>核心算法：</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>((year%<span class="number">4</span>==<span class="number">0</span> &amp;&amp; year%<span class="number">100</span>!=<span class="number">0</span>) || year%<span class="number">400</span>==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>C++参考程序如下：</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> year,month;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;year&gt;&gt;month;</span><br><span class="line"><span class="keyword">if</span>(month==<span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>((year%<span class="number">4</span>==<span class="number">0</span> &amp;&amp; year%<span class="number">100</span>!=<span class="number">0</span>) || year%<span class="number">400</span>==<span class="number">0</span>)</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;29&quot;</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;28&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">switch</span>(month)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:<span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;31&quot;</span>;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:<span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;31&quot;</span>;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:<span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;30&quot;</span>;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:<span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;31&quot;</span>;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>:<span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;30&quot;</span>;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">7</span>:<span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;31&quot;</span>;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">8</span>:<span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;31&quot;</span>;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">9</span>:<span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;30&quot;</span>;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">10</span>:<span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;31&quot;</span>;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">11</span>:<span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;30&quot;</span>;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">12</span>:<span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;31&quot;</span>;<span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><ul><li>本题的核心是掌握闰年的定义，然后根据定义设计算法</li></ul>]]></content>
      
      
      <categories>
          
          <category> C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Notepad++汉化教程</title>
      <link href="Notepad-%E6%B1%89%E5%8C%96%E6%95%99%E7%A8%8B.html"/>
      <url>Notepad-%E6%B1%89%E5%8C%96%E6%95%99%E7%A8%8B.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Notepad-汉化方法总结"><a href="#Notepad-汉化方法总结" class="headerlink" title="Notepad++汉化方法总结"></a><strong><em>Notepad++汉化方法总结</em></strong></h2><p><strong>Notepad++系统只带了中文语言包，不需要像其他软件一样破解</strong></p><ol><li><p>打开Notepad++（通过文本文件右键选择以Notepad++打开或者找到Notepad++的快捷方式打开）</p></li><li><p>菜单栏找到settings–&gt;Preferences(首选项)<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200630190107824.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjM1MzM2Ng==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p></li><li><p>找到General     右侧Localization选择简体中文，可以看到语言直接变成了中文<br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200630190153732.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjM1MzM2Ng==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200630190153733.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjM1MzM2Ng==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p></li><li><p>点击下侧关闭按钮</p></li></ol><p><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200630190211528.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjM1MzM2Ng==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 软件使用技巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS实现鼠标移入时图片的放大效果以及缓慢过渡</title>
      <link href="CSS%E5%AE%9E%E7%8E%B0%E9%BC%A0%E6%A0%87%E7%A7%BB%E5%85%A5%E6%97%B6%E5%9B%BE%E7%89%87%E7%9A%84%E6%94%BE%E5%A4%A7%E6%95%88%E6%9E%9C%E4%BB%A5%E5%8F%8A%E7%BC%93%E6%85%A2%E8%BF%87%E6%B8%A1.html"/>
      <url>CSS%E5%AE%9E%E7%8E%B0%E9%BC%A0%E6%A0%87%E7%A7%BB%E5%85%A5%E6%97%B6%E5%9B%BE%E7%89%87%E7%9A%84%E6%94%BE%E5%A4%A7%E6%95%88%E6%9E%9C%E4%BB%A5%E5%8F%8A%E7%BC%93%E6%85%A2%E8%BF%87%E6%B8%A1.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><strong><em>transform:scale()可以实现按比例放大或者缩小功能。</em></strong><br><strong><em>transition可以设置动画执行的时间，实现缓慢或者快速的执行动画，效果图如下：</em></strong><br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200708103707770.gif#pic_center" alt="在这里插入图片描述"></p><hr><h2 id="源码："><a href="#源码：" class="headerlink" title="源码："></a>源码：</h2><hr><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;!<span class="selector-tag">DOCTYPE</span> <span class="selector-tag">html</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">html</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">head</span>&gt;</span><br><span class="line">&lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class="line">&lt;title&gt;css实现鼠标移入时的放大效果&lt;/title&gt;</span><br><span class="line">        &lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">        <span class="selector-tag">div</span>&#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">        <span class="attribute">margin</span>:<span class="number">0</span> auto;</span><br><span class="line">        <span class="attribute">margin-top</span>: <span class="number">100px</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-tag">div</span> <span class="selector-tag">img</span>&#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">        transition: all 0.6s;    //设置动画执行的时间为0.6s</span><br><span class="line">        <span class="selector-tag">cursor</span>: <span class="selector-tag">pointer</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-tag">div</span> <span class="selector-tag">img</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">        transform: scale(1.2);     //设置图片按照比例放大1.2倍</span><br><span class="line">        &#125;</span><br><span class="line">        &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">div</span>&gt;</span><br><span class="line">&lt;img src=&quot;images/unnamed.jpg&quot;&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p> <strong><em>- 图片溢出div时遮罩：</em></strong><br> <img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20200708104228162.gif#pic_center" alt="在这里插入图片描述"></p><hr><h2 id="源码：-1"><a href="#源码：-1" class="headerlink" title="源码："></a>源码：</h2><hr><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;!<span class="selector-tag">DOCTYPE</span> <span class="selector-tag">html</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">html</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">head</span>&gt;</span><br><span class="line">&lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class="line">&lt;title&gt;css实现鼠标移入时的放大效果&lt;/title&gt;</span><br><span class="line">        &lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">        <span class="selector-tag">div</span>&#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">        <span class="attribute">margin</span>:<span class="number">0</span> auto;</span><br><span class="line">        <span class="attribute">margin-top</span>: <span class="number">100px</span>;</span><br><span class="line">        overflow: hidden;    //图片超出div部分隐藏</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-tag">div</span> <span class="selector-tag">img</span>&#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">        transition: all 0.6s;    //设置动画执行的时间为0.6s</span><br><span class="line">        <span class="selector-tag">cursor</span>: <span class="selector-tag">pointer</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-tag">div</span> <span class="selector-tag">img</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">        transform: scale(1.3);     //设置图片按照比例放大1.3倍</span><br><span class="line">        &#125;</span><br><span class="line">        &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">div</span>&gt;</span><br><span class="line">&lt;img src=&quot;images/unnamed.jpg&quot;&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据结构作业——P53算法设计题（6）：设计一个算法，通过一趟遍历确定长度为n的单链表中值最大的结点</title>
      <link href="%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BD%9C%E4%B8%9A%E2%80%94%E2%80%94P53%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E9%A2%98%EF%BC%886%EF%BC%89%EF%BC%9A%E8%AE%BE%E8%AE%A1%E4%B8%80%E4%B8%AA%E7%AE%97%E6%B3%95%EF%BC%8C%E9%80%9A%E8%BF%87%E4%B8%80%E8%B6%9F%E9%81%8D%E5%8E%86%E7%A1%AE%E5%AE%9A%E9%95%BF%E5%BA%A6%E4%B8%BAn%E7%9A%84%E5%8D%95%E9%93%BE%E8%A1%A8%E4%B8%AD%E5%80%BC%E6%9C%80%E5%A4%A7%E7%9A%84%E7%BB%93%E7%82%B9.html"/>
      <url>%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BD%9C%E4%B8%9A%E2%80%94%E2%80%94P53%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E9%A2%98%EF%BC%886%EF%BC%89%EF%BC%9A%E8%AE%BE%E8%AE%A1%E4%B8%80%E4%B8%AA%E7%AE%97%E6%B3%95%EF%BC%8C%E9%80%9A%E8%BF%87%E4%B8%80%E8%B6%9F%E9%81%8D%E5%8E%86%E7%A1%AE%E5%AE%9A%E9%95%BF%E5%BA%A6%E4%B8%BAn%E7%9A%84%E5%8D%95%E9%93%BE%E8%A1%A8%E4%B8%AD%E5%80%BC%E6%9C%80%E5%A4%A7%E7%9A%84%E7%BB%93%E7%82%B9.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><strong><em>思路：</em></strong></p><ol><li>设单链表首个元素为最大值max</li><li>通过遍历元素，与最大值max作比较，将较大值附给max</li><li>输出最大值max</li></ol><p><strong><em>算法：</em></strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">*title:P53页程序设计第6题</span></span><br><span class="line"><span class="comment">*writer:weiyuexin</span></span><br><span class="line"><span class="comment">*data:2020-9-26</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ElemType int</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">LNode</span>&#123;</span></span><br><span class="line">    ElemType data;   <span class="comment">//定义数据域</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">LNode</span> *<span class="title">next</span>;</span></span><br><span class="line">&#125;LNode,*LinkList;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CreateList</span><span class="params">(LinkList &amp;L)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    L = <span class="keyword">new</span> LNode;     <span class="comment">//申请存储空间</span></span><br><span class="line">    L-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;请输入单链表的长度：&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line"></span><br><span class="line">    LinkList r = L;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;请输入单链表的数据元素：&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        LinkList p = <span class="keyword">new</span> LNode;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;p-&gt;data;</span><br><span class="line">        p-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">        r-&gt;next = p;</span><br><span class="line">        r = p;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Display</span><span class="params">(LinkList L)</span></span>&#123;</span><br><span class="line">    LinkList p = L-&gt;next;</span><br><span class="line">    <span class="keyword">while</span>(p)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;p-&gt;data&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">FindMax</span><span class="params">(LinkList L)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> max = L-&gt;next-&gt;data;</span><br><span class="line">    LinkList p = L-&gt;next;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">1</span>,maxnode;</span><br><span class="line">    <span class="keyword">while</span>(p)&#123;</span><br><span class="line">        <span class="keyword">if</span>(p-&gt;data &gt; max)&#123;</span><br><span class="line">            max = p-&gt;data;</span><br><span class="line">            maxnode = i;</span><br><span class="line">        &#125;</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">        ++i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;max&lt;&lt;<span class="string">&quot;     &quot;</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;maxnode&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;P53页第7题：&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    LinkList L;</span><br><span class="line">    CreateList(L);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;初始化后的单链表为：&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    Display(L);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;该单链表中数据元素最大值以及最大值对应的结点分别为：&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    FindMax(L);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong><em>运行结果如下：</em></strong><br><img src= "/img/loading.gif" data-lazy-src="https://img-blog.csdnimg.cn/20201011213709612.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjM1MzM2Ng==,size_16,color_FFFFFF,t_70#pic_left" alt="在这里插入图片描述"></p>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据结构实验三——栈和队列的基本操作</title>
      <link href="%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AE%9E%E9%AA%8C%E4%B8%89%E2%80%94%E2%80%94%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C.html"/>
      <url>%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AE%9E%E9%AA%8C%E4%B8%89%E2%80%94%E2%80%94%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="一、实验内容"><a href="#一、实验内容" class="headerlink" title="一、实验内容"></a>一、实验内容</h1><hr><h3 id="1-实验目的"><a href="#1-实验目的" class="headerlink" title="1.实验目的"></a>1.实验目的</h3><hr><ol><li>编程实现顺序栈和链栈的基本操作：建栈，取栈顶元素，入栈，出栈；</li><li>编程实现循环队列和链队列的基本操作：建队列，取队头元素，入队，出队。</li></ol><hr><h3 id="2-基本要求"><a href="#2-基本要求" class="headerlink" title="2. 基本要求"></a>2. 基本要求</h3><hr><ol><li>掌握栈的顺序存储结构、链式存储结构及其基本操作；</li><li>掌握队列的顺序存储结构、链式存储结构及其基本操作。</li></ol><hr><h3 id="3-支撑的课程目标"><a href="#3-支撑的课程目标" class="headerlink" title="3. 支撑的课程目标"></a>3. 支撑的课程目标</h3><hr><p>本实验项目可以支撑“目标1. 理解数据结构的基本概念、计算机内部数据对象的表示和特性。掌握线性表、树、图等数据逻辑结构、存储结构及其差异以及各种操作的实现。”、和“目标2能够针对实际问题选择合适的数据结构和方法设计出结构清晰、正确易读、复杂性较优的算法，同时掌握对算法进行时间、空间复杂度分析的基本技能。”。<br>本实验通过验证方式引导学生掌握顺序栈和链栈的基本操作，循环队列和链队列的基本    操作，为后续学习打下基础，以便更好地达成后续更高层次的课程目标。</p><hr><h1 id="二、实验过程"><a href="#二、实验过程" class="headerlink" title="二、实验过程"></a>二、实验过程</h1><hr><hr><h3 id="1-顺序栈的建栈、入栈、出栈、取栈顶元素"><a href="#1-顺序栈的建栈、入栈、出栈、取栈顶元素" class="headerlink" title="1. 顺序栈的建栈、入栈、出栈、取栈顶元素"></a>1. 顺序栈的建栈、入栈、出栈、取栈顶元素</h3><hr><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">*title:顺序栈的基本操作</span></span><br><span class="line"><span class="comment">*writer:weiyuexin</span></span><br><span class="line"><span class="comment">*data:2020-10-11</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SElemType int</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>&#123;</span></span><br><span class="line">    SElemType *base;    <span class="comment">//定义栈底指针</span></span><br><span class="line">    SElemType *top;     <span class="comment">//定义栈顶指针</span></span><br><span class="line">    <span class="keyword">int</span> stacksize;</span><br><span class="line">&#125;SqStack;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InitStack</span><span class="params">(SqStack &amp;S,<span class="keyword">int</span> maxsize)</span></span>&#123;    <span class="comment">//初始化栈</span></span><br><span class="line">    S.base = <span class="keyword">new</span> SElemType[maxsize];</span><br><span class="line">    <span class="keyword">if</span>(!S.base)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;创建栈失败!&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    S.top = S.base;     <span class="comment">//top初始化为base,是空栈</span></span><br><span class="line">    S.stacksize = maxsize;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;成功创建了一个最大容量为&quot;</span>&lt;&lt;S.stacksize&lt;&lt;<span class="string">&quot;的顺序栈!&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Display</span><span class="params">(SqStack S)</span></span>&#123;     <span class="comment">//打印顺序栈</span></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;该顺序栈为:&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;栈底=&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;S.stacksize;i++)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;*S.base++&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">        <span class="keyword">if</span>(!*S.base || S.top == S.base)&#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;&lt;=栈顶&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Push</span><span class="params">(SqStack &amp;S,SElemType e)</span></span>&#123;    <span class="comment">//入栈</span></span><br><span class="line">    <span class="keyword">if</span>(S.top - S.base == S.stacksize)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;栈已满，无法插入!&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    *S.top++=e;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">SElemType <span class="title">Pop</span><span class="params">(SqStack &amp;S)</span></span>&#123;    <span class="comment">//出栈</span></span><br><span class="line">    <span class="keyword">if</span>(S.top == S.base)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;栈空!&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    SElemType e;</span><br><span class="line">    e = *--S.top;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;e&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">SElemType <span class="title">GetTop</span><span class="params">(SqStack S)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(S.top != S.base)&#123;</span><br><span class="line">        <span class="keyword">return</span> *(S.top<span class="number">-1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    SqStack S;</span><br><span class="line">    <span class="keyword">int</span> maxsize;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;实验3_1-------------------顺序栈的基本操作&quot;</span>&lt;&lt;<span class="built_in">endl</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;请输入对应数字选择操作：&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;1------------------建栈&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;2------------------入栈&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;3------------------出栈&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;4------------------打印顺序栈&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;5------------------取栈顶元素&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;0------------------结束程序运行&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">int</span> operation;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;operation)&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span>(operation)&#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span> :</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;程序运行结束!&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span> :</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;请输入栈的最大容量:&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;maxsize;</span><br><span class="line">            InitStack(S,maxsize);</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;请输入对应数字选择操作：&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span> :</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;请输入数据元素,当输入-1时结束:&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">int</span> e;</span><br><span class="line">            <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;e)&#123;</span><br><span class="line">                <span class="keyword">if</span>(e == <span class="number">-1</span>)&#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                Push(S,e);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;入栈成功!&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            Display(S);</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;请输入对应数字选择操作：&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span> :</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;请输入出栈元素的个数:&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">int</span> m;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;m;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;出栈的元素为:&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i= <span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line">                Pop(S);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;(先出-&gt;后出)&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            Display(S);</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;请输入对应数字选择操作：&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span> :</span><br><span class="line">            Display(S);</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;请输入对应数字选择操作：&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">5</span> :</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;栈顶元素为: &quot;</span>&lt;&lt;GetTop(S)&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;请输入对应数字选择操作：&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span> :</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;您选择的操作不存在，请重新选择:&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;请输入对应数字选择操作：&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-链栈的建栈、入栈、出栈、及取栈顶元素"><a href="#1-链栈的建栈、入栈、出栈、及取栈顶元素" class="headerlink" title="1. 链栈的建栈、入栈、出栈、及取栈顶元素"></a>1. 链栈的建栈、入栈、出栈、及取栈顶元素</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">*title:链栈的基本操作</span></span><br><span class="line"><span class="comment">*writer:weiyuexin</span></span><br><span class="line"><span class="comment">*data:2020-10-11</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ElemType int</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">StackNode</span>&#123;</span></span><br><span class="line">    ElemType data;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">StackNode</span> *<span class="title">next</span>;</span></span><br><span class="line">&#125;StackNode,*LinkStack;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InitStack</span><span class="params">(LinkStack &amp;S)</span></span>&#123;     <span class="comment">//初始化链栈</span></span><br><span class="line">    S = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;栈S初始化成功!&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Display</span><span class="params">(LinkStack S)</span></span>&#123;</span><br><span class="line">    LinkStack p = S;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;该链栈为:&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;栈顶=&gt; &quot;</span>;</span><br><span class="line">    <span class="keyword">while</span>(p)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;p-&gt;data&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot; &lt;=栈底&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">ElemType <span class="title">Pop</span><span class="params">(LinkStack &amp;S,ElemType ee)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(S == <span class="literal">NULL</span>)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;栈已空，无法在进行删除操作!&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    StackNode *p = <span class="keyword">new</span> StackNode();</span><br><span class="line">    ee = S-&gt;data;</span><br><span class="line">    p = S;</span><br><span class="line">    S = S-&gt;next;</span><br><span class="line">    <span class="keyword">delete</span> p;</span><br><span class="line">    <span class="keyword">return</span> ee;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Push</span><span class="params">(LinkStack &amp;S,ElemType e)</span></span>&#123;     <span class="comment">//入栈</span></span><br><span class="line">    StackNode *p = <span class="keyword">new</span> StackNode();</span><br><span class="line">    p -&gt;data = e;</span><br><span class="line">    p -&gt;next = S;</span><br><span class="line">    S = p;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    LinkStack S;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;实验3_2-------------------链栈的基本操作&quot;</span>&lt;&lt;<span class="built_in">endl</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;请输入对应数字选择操作：&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;1------------------初始化链栈&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;2------------------入栈&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;3------------------出栈&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;4------------------打印链栈&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;5------------------取栈顶元素&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;0------------------结束程序运行&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">int</span> operation;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;operation)&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span>(operation)&#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span> :</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;程序运行结束!&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span> :</span><br><span class="line">            InitStack(S);</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;请输入对应数字选择操作：&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span> :</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;请输入数据元素,当输入-1时结束:&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            ElemType e;</span><br><span class="line">            <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;e)&#123;</span><br><span class="line">                <span class="keyword">if</span>(e == <span class="number">-1</span>)&#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                Push(S,e);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;入栈成功!&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            Display(S);</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;请输入对应数字选择操作：&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span> :</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;请输入出栈元素的个数:&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">int</span> n;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;出栈的元素依次为: &quot;</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">                ElemType ee;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;Pop(S,ee)&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            Display(S);</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;请输入对应数字选择操作：&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span> :</span><br><span class="line">            Display(S);</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;请输入对应数字选择操作：&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">5</span> :</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;栈顶元素为:&quot;</span>&lt;&lt;S-&gt;data&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;请输入对应数字选择操作：&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span> :</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;您选择的操作不存在，请重新选择:&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;请输入对应数字选择操作：&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="3-循环队列的建立、入队、出队及取队头元素"><a href="#3-循环队列的建立、入队、出队及取队头元素" class="headerlink" title="3.循环队列的建立、入队、出队及取队头元素"></a>3.循环队列的建立、入队、出队及取队头元素</h3><hr><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">*title: 循环队列的基本操作</span></span><br><span class="line"><span class="comment">*writer:weiyuexin</span></span><br><span class="line"><span class="comment">*data:2020-10-11</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXSIZE 100</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> QElemType int</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>&#123;</span></span><br><span class="line">    QElemType *base;     <span class="comment">//存储空间基地址</span></span><br><span class="line">    <span class="keyword">int</span> front;    <span class="comment">//头指针</span></span><br><span class="line">    <span class="keyword">int</span> rear;     <span class="comment">//尾指针</span></span><br><span class="line">&#125;SqQueue;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InitQueue</span><span class="params">(SqQueue &amp;Q)</span></span>&#123;        <span class="comment">//初始化循环队列</span></span><br><span class="line">    Q.base = <span class="keyword">new</span> QElemType[MAXSIZE];</span><br><span class="line">    <span class="keyword">if</span>(!Q.base)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;队列初始化失败!&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    Q.front = Q.rear = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;循环队列初始化成功!&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">EnQueue</span><span class="params">(SqQueue &amp;Q,QElemType e)</span></span>&#123;    <span class="comment">//入队</span></span><br><span class="line">    <span class="keyword">if</span>((Q.rear + <span class="number">1</span>)%MAXSIZE == Q.front)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;该队列已满无法插入!&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    Q.base[Q.rear] = e;    <span class="comment">//新元素插入对尾</span></span><br><span class="line">    Q.rear = (Q.rear + <span class="number">1</span>)%MAXSIZE;      <span class="comment">//队尾指针加一</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">QElemType <span class="title">DeQueue</span><span class="params">(SqQueue &amp;Q,QElemType &amp;ee)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(Q.front == Q.rear)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;该循环队列已空!&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ee = Q.base[Q.front];   <span class="comment">//保存队首指针</span></span><br><span class="line">    Q.front = (Q.front + <span class="number">1</span>)%MAXSIZE;    <span class="comment">//队首指针加一</span></span><br><span class="line">    <span class="keyword">return</span> ee;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Display</span><span class="params">(SqQueue Q)</span></span>&#123;     <span class="comment">//打印循环队列</span></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;该循环队列为: &quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;队首=&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=Q.front;i&lt;MAXSIZE;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!Q.base[i])&#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;Q.base[i]&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;&lt;=队尾&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">QElemType <span class="title">GetHead</span><span class="params">(SqQueue Q)</span></span>&#123;   <span class="comment">//去队首元素</span></span><br><span class="line">    <span class="keyword">if</span>(Q.front != Q.rear)&#123;   <span class="comment">//队列非空</span></span><br><span class="line">        <span class="keyword">return</span> Q.base[Q.front];</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;队列中没有元素!&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">QueueLength</span><span class="params">(SqQueue Q)</span></span>&#123;   <span class="comment">//求队列的长度</span></span><br><span class="line">    <span class="keyword">return</span> (Q.rear - Q.front +MAXSIZE)%MAXSIZE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    SqQueue Q;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;实验3_3---------------------循环队列的基本操作&quot;</span>&lt;&lt;<span class="built_in">endl</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;请输入对应数字选择您想要的操作:&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;1----------------建立循环队列&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;2----------------入队&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;3----------------出队&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;4----------------取队头元素&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;5----------------打印循环队列&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;6----------------求队列长度&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;0----------------结束程序&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> operation;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;operation)&#123;</span><br><span class="line">        <span class="keyword">switch</span>(operation)&#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span> :</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;程序运行结束!&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span> :</span><br><span class="line">            InitQueue(Q);   <span class="comment">//初始化队列</span></span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;请输入对应数字选择您想要的操作:&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span> :</span><br><span class="line">            <span class="keyword">int</span> e;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;请输入想要入队的元素，以-1为截止符:&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;e)&#123;</span><br><span class="line">                <span class="keyword">if</span>(e == <span class="number">-1</span>)&#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                EnQueue(Q,e);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;入队成功!&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            Display(Q);</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;请输入对应数字选择您想要的操作:&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span> :</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;请输入想要出队的元素个数:&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">int</span> n;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;出队的元素依次为: &quot;</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">                QElemType ee;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;DeQueue(Q,ee)&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            Display(Q);</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;请输入对应数字选择您想要的操作:&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span> :</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;队首元素为:&quot;</span>&lt;&lt;GetHead(Q)&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;请输入对应数字选择您想要的操作:&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">5</span> :</span><br><span class="line">            Display(Q);</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;请输入对应数字选择您想要的操作:&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">6</span> :</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;该循环链表的长度为:&quot;</span>&lt;&lt;QueueLength(Q)&lt;&lt;<span class="built_in">endl</span>;    <span class="comment">//求队列长度</span></span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;请输入对应数字选择您想要的操作:&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span> :</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;您选择的操作不存在，请重新选择:&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-链队的创建、入队、出队及取队头元素"><a href="#4-链队的创建、入队、出队及取队头元素" class="headerlink" title="4.链队的创建、入队、出队及取队头元素"></a>4.链队的创建、入队、出队及取队头元素</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">*title:链队的基本操作</span></span><br><span class="line"><span class="comment">*writer:weiyuexin</span></span><br><span class="line"><span class="comment">*data:2020-10-11</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> QElemType int</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">QNode</span>&#123;</span></span><br><span class="line">    QElemType data;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">QNode</span> *<span class="title">next</span>;</span></span><br><span class="line">&#125;QNode,*QueuePtr;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>&#123;</span></span><br><span class="line">    QueuePtr front;     <span class="comment">//队头指针</span></span><br><span class="line">    QueuePtr rear;     <span class="comment">//队尾指针</span></span><br><span class="line">&#125;LinkQueue;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InitQueue</span><span class="params">(LinkQueue &amp;Q)</span></span>&#123;     <span class="comment">//初始化链队</span></span><br><span class="line">    Q.front = Q.rear = <span class="keyword">new</span> QNode;        <span class="comment">//生成新结点作为头结点，队头和队尾指针指向此节点</span></span><br><span class="line">    Q.front-&gt;next = <span class="literal">NULL</span>;     <span class="comment">//头结点的指针域置空</span></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;链队初始化成功!&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">EnQueue</span><span class="params">(LinkQueue &amp;Q,QElemType e)</span></span>&#123;     <span class="comment">//入队</span></span><br><span class="line">    QNode *p = <span class="keyword">new</span> QNode();</span><br><span class="line">    p-&gt;data = e;</span><br><span class="line">    p-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">    Q.rear-&gt;next = p;</span><br><span class="line">    Q.rear = p;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">QElemType <span class="title">DeQueue</span><span class="params">(LinkQueue &amp;Q)</span></span>&#123;      <span class="comment">//出队</span></span><br><span class="line">    <span class="keyword">if</span>(Q.front == Q.rear)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;该链队已空!&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">         <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    QElemType e;</span><br><span class="line">    QNode *p = <span class="keyword">new</span> QNode();</span><br><span class="line">    p = Q.front-&gt;next;</span><br><span class="line">    e = p-&gt;data;</span><br><span class="line">    Q.front-&gt;next = p-&gt;next;</span><br><span class="line">    <span class="keyword">if</span>(Q.rear == p)&#123;</span><br><span class="line">        Q.rear = Q.front;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">delete</span> p;</span><br><span class="line">    <span class="keyword">return</span> e;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">QElemType <span class="title">GetHead</span><span class="params">(LinkQueue Q)</span></span>&#123;        <span class="comment">//取队首值</span></span><br><span class="line">    <span class="keyword">if</span>(Q.front != Q.rear)&#123;     <span class="comment">//队列非空</span></span><br><span class="line">        <span class="keyword">return</span> Q.front-&gt;next-&gt;data;     <span class="comment">//返回队首值</span></span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">       <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;该链队为空！&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">       <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Display</span><span class="params">(LinkQueue Q)</span></span>&#123;      <span class="comment">//打印链队元素</span></span><br><span class="line">    QNode *p = <span class="keyword">new</span> QNode();</span><br><span class="line">    p = Q.front-&gt;next;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;该链队为: 队首=&gt; &quot;</span>;</span><br><span class="line">    <span class="keyword">while</span>(p != <span class="literal">NULL</span>)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;p-&gt;data&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;&lt;=队尾&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    LinkQueue Q;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;实验3_4---------------------链队列的基本操作&quot;</span>&lt;&lt;<span class="built_in">endl</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;请输入对应数字选择您想要的操作:&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;1----------------建立链队列&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;2----------------入队&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;3----------------出队&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;4----------------取队头元素&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;5----------------打印链队列&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;0----------------结束程序&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">int</span> operation;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;请输入对应的数字选择你想要进行的操作:&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;operation)&#123;</span><br><span class="line">        <span class="keyword">switch</span>(operation)&#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span> :</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;程序运行结束!&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span> :</span><br><span class="line">            InitQueue(Q);</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;请输入对应的数字选择您想要进行的操作:&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span> :</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;请输入要入队的元素个数；&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">int</span> n;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;请输入要入队的元素:&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">                QElemType e;</span><br><span class="line">                <span class="built_in">cin</span>&gt;&gt;e;</span><br><span class="line">                EnQueue(Q,e);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;n&lt;&lt;<span class="string">&quot;个元素入队成功!&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            Display(Q);</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;请输入对应的数字选择您想要进行的操作:&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span> :</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;请输入要出栈的元素的个数:&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">int</span> m;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;m;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;出栈的元素依次为: &quot;</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;DeQueue(Q)&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            Display(Q);</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;请输入对应的数字选择您想要进行的操作:&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span> :</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;该链队队首值为: &quot;</span>&lt;&lt;GetHead(Q)&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;请输入对应的数字选择您想要进行的操作:&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">5</span> :</span><br><span class="line">            Display(Q);</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;请输入对应的数字选择您想要进行的操作:&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span> :</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;您选择的操作不存在，请重新选择:&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据结构实验二——单链表的基本操作</title>
      <link href="%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AE%9E%E9%AA%8C%E4%BA%8C%E2%80%94%E2%80%94%E5%8D%95%E9%93%BE%E8%A1%A8%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C.html"/>
      <url>%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AE%9E%E9%AA%8C%E4%BA%8C%E2%80%94%E2%80%94%E5%8D%95%E9%93%BE%E8%A1%A8%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr><h2 id="一、实验内容"><a href="#一、实验内容" class="headerlink" title="一、实验内容"></a>一、实验内容</h2><hr><ol><li>编程实现单链表的基本操作：建立单链表，查找单链表，插入单链表，删除单链表；</li><li>采用单链表结构编程实现：两个有序单链表的归并运算。</li></ol><hr><h2 id="二、基本要求"><a href="#二、基本要求" class="headerlink" title="二、基本要求"></a>二、基本要求</h2><hr><ol><li>掌握线性表的链式存储结构；</li><li>掌握单链表及其基本操作的实现。</li></ol><hr><h2 id="三、支撑的课程目标"><a href="#三、支撑的课程目标" class="headerlink" title="三、支撑的课程目标"></a>三、支撑的课程目标</h2><hr><ol><li>本实验项目可以支撑“目标1. 理解数据结构的基本概念、计算机内部数据对象的表示和特性。掌握线性表、树、图等数据逻辑结构、存储结构及其差异以及各种操作的实现。</li><li>本实验通过验证方式引导学生深入理解单链表的逻辑结构、物理结构等概念，掌握单链表的基本操作，为后续学习打下基础，以便更好地达成后续更高层次的课程目标。</li></ol><hr><h2 id="四、实验过程"><a href="#四、实验过程" class="headerlink" title="四、实验过程"></a>四、实验过程</h2><hr><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">*title:单链表的基本操作</span></span><br><span class="line"><span class="comment">*writer:weiyuexin</span></span><br><span class="line"><span class="comment">*data:2020-10-1</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ElemType int</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">LNode</span>&#123;</span></span><br><span class="line">    ElemType data;    <span class="comment">//数据域</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">LNode</span> *<span class="title">next</span>;</span>   <span class="comment">//指针域</span></span><br><span class="line">&#125;LNode ,*LinkList;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CreateList</span><span class="params">(LinkList &amp;L)</span></span>&#123;   <span class="comment">//初始化单链表</span></span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;请输入单链表的长度：&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    L = <span class="keyword">new</span> LNode;</span><br><span class="line">    L-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">    LinkList r = L;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;请输入单链表的数据元素：&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; n; i++)&#123;</span><br><span class="line">        LinkList p = <span class="keyword">new</span> LNode;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;p-&gt;data;</span><br><span class="line">        p-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">        r-&gt;next = p;</span><br><span class="line">        r = p;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Display</span><span class="params">(LinkList &amp;L)</span></span>&#123;      <span class="comment">//打印单链表</span></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;该单链表为：&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    LinkList p = L-&gt;next;</span><br><span class="line">    <span class="keyword">while</span>(p)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;p-&gt;data&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">FindElem</span><span class="params">(LinkList &amp;L,<span class="keyword">int</span> i)</span></span>&#123;    <span class="comment">//检索元素</span></span><br><span class="line">    LinkList p1 = L;</span><br><span class="line">    LinkList p2 = L;</span><br><span class="line">    <span class="keyword">int</span> n=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">bool</span> sign = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">while</span>(p1)&#123;</span><br><span class="line">        <span class="keyword">if</span>(i == p1-&gt;data)&#123;</span><br><span class="line">            sign = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        p1 = p1-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(sign)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;值为&quot;</span>&lt;&lt;i&lt;&lt;<span class="string">&quot;的元素是表中的第&quot;</span>;</span><br><span class="line">        <span class="keyword">while</span>(p2)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i == p2-&gt;data)&#123;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;n&lt;&lt;<span class="string">&quot;, &quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            p2 = p2-&gt;next;</span><br><span class="line">            n++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;个元素&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;单链表中不存在该元素!&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">GetElem</span><span class="params">(LinkList L,<span class="keyword">int</span> i)</span></span>&#123;    <span class="comment">//定位元素</span></span><br><span class="line">    LinkList p = L-&gt;next;</span><br><span class="line">    <span class="keyword">int</span> j = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(p &amp;&amp; j&lt;i)&#123;</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">        j++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!p || j&gt;i)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;您输入的位置已超出单链表的长度!&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;该单链表第&quot;</span>&lt;&lt;i&lt;&lt;<span class="string">&quot;个元素为 &quot;</span>&lt;&lt;p-&gt;data&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Insert</span><span class="params">(LinkList &amp;L,<span class="keyword">int</span> j,ElemType e)</span></span>&#123;     <span class="comment">//插入元素</span></span><br><span class="line">    LinkList p = L;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">//判断要插入的位置是否存在</span></span><br><span class="line">    LinkList p1 = L-&gt;next;</span><br><span class="line">    <span class="keyword">int</span> length = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(p1)&#123;</span><br><span class="line">        length++;</span><br><span class="line">        p1 = p1-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(j&gt;length)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;要插入的位置不存在!&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(p &amp;&amp; i&lt;j - <span class="number">1</span>)&#123;</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">        ++i;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    LNode *s = <span class="keyword">new</span> LNode();    <span class="comment">//生成新节点</span></span><br><span class="line">    s-&gt;data = e;        <span class="comment">//将数据域置为e</span></span><br><span class="line">    s-&gt;next = p-&gt;next;</span><br><span class="line">    p-&gt;next = s;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;插入成功!&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Delete</span><span class="params">(LinkList &amp;L,<span class="keyword">int</span> x)</span></span>&#123;     <span class="comment">//删除指定位置的元素</span></span><br><span class="line">    LinkList p = L;</span><br><span class="line">    <span class="keyword">int</span> i =<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(p &amp;&amp; i &lt; x - <span class="number">1</span>)&#123;</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">        ++i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!p-&gt;next || i&gt;x<span class="number">-1</span>)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;删除位置不合理!&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    LNode *r = <span class="keyword">new</span> LNode();</span><br><span class="line">    r = p-&gt;next;</span><br><span class="line">    p-&gt;next = r-&gt;next;</span><br><span class="line">    <span class="keyword">delete</span> r;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;删除成功!&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DeleteElem</span><span class="params">(LinkList &amp;L,ElemType e)</span></span>&#123;    <span class="comment">//删除指定值的元素</span></span><br><span class="line">LinkList p = L;</span><br><span class="line"><span class="keyword">bool</span> sign = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">while</span>(p)&#123;</span><br><span class="line"><span class="keyword">if</span>(p-&gt;next-&gt;data == e)&#123;</span><br><span class="line">            LNode *r = <span class="keyword">new</span> LNode();</span><br><span class="line">            r = p-&gt;next;</span><br><span class="line">            p-&gt;next = r-&gt;next;</span><br><span class="line">            <span class="keyword">delete</span> r;</span><br><span class="line">            sign = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">p = p-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(sign)&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;删除成功!&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">Display(L);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;要删除的元素不存在!&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Merger</span><span class="params">()</span></span>&#123;     <span class="comment">//两个有序单链表的归并</span></span><br><span class="line">    LinkList LA;</span><br><span class="line">    LinkList LB;</span><br><span class="line">    LinkList LC;</span><br><span class="line"></span><br><span class="line">    LNode *pa = <span class="keyword">new</span> LNode();</span><br><span class="line">    LNode *pb = <span class="keyword">new</span> LNode();</span><br><span class="line">    LNode *pc = <span class="keyword">new</span> LNode();</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;请初始化单链表PA:&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    CreateList(LA);</span><br><span class="line">    Display(LA);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;请初始化单链表PB:&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    CreateList(LB);</span><br><span class="line">    Display(LB);</span><br><span class="line"></span><br><span class="line">    pa = LA-&gt;next;    <span class="comment">//pa和pb的初值分别指向两个表的第一个节点</span></span><br><span class="line">    pb = LB-&gt;next;</span><br><span class="line">    LC = LA;      <span class="comment">//用LA的头结点作为LC的头结点</span></span><br><span class="line">    pc = LC;      <span class="comment">//pc的初值指向LC的头结点</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(pa &amp;&amp; pb)&#123;    <span class="comment">//当LA和LB均未达到表尾时，选取最小值插入LC后</span></span><br><span class="line">        <span class="keyword">if</span>(pa-&gt;data &lt;= pb-&gt;data)&#123;</span><br><span class="line">            pc-&gt;next = pa;</span><br><span class="line">            pc = pa;</span><br><span class="line">            pa = pa-&gt;next;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            pc-&gt;next = pb;</span><br><span class="line">            pc = pb;</span><br><span class="line">            pb = pb-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    pc-&gt;next = pa?pa:pb;   <span class="comment">//将非空表的剩余片段插入到PC之后</span></span><br><span class="line">    <span class="keyword">delete</span> LB;           <span class="comment">//释放LB的头结点</span></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;这两个单链表归并完毕!&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    Display(LC);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    LinkList L;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;实验2 ----- 单链表的基本操作&quot;</span>&lt;&lt;<span class="built_in">endl</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;请输入数字选择对应的操作!!!&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;1---------创建单链表&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;2---------显示单链表&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;3---------检索单链表中的数据元素&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;4---------定位显示单链表元素&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;5---------插入元素&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;6---------删除指定位置的元素&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;7---------删除指定值的元素&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;8---------求两个有序单链表的并归&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;0---------结束程序&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;请输入你要进行的操作：&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> operation;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;operation)&#123;</span><br><span class="line">        <span class="keyword">switch</span>(operation)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0</span> :   <span class="comment">//结束程序</span></span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;程序运行结束!!!&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span> :    <span class="comment">//创建单链表</span></span><br><span class="line">                CreateList(L);</span><br><span class="line">                Display(L);</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;请输入你要进行的操作：&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span> :    <span class="comment">//显示单链表</span></span><br><span class="line">                Display(L);</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;请输入你要进行的操作：&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span> :     <span class="comment">//查找数据元素</span></span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;请输入要检索的元素：&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">                <span class="keyword">int</span> n;</span><br><span class="line">                <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">                FindElem(L,n);</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;请输入你要进行的操作：&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span> :      <span class="comment">//查看指定位置的元素</span></span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;请输入要查看的元素位置：&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">                <span class="keyword">int</span> i;</span><br><span class="line">                <span class="built_in">cin</span>&gt;&gt;i;</span><br><span class="line">                GetElem(L,i);</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;请输入你要进行的操作：&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">5</span> :      <span class="comment">//插入元素</span></span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;请输入要插入的位置:&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">                <span class="keyword">int</span> j;</span><br><span class="line">                <span class="built_in">cin</span>&gt;&gt;j;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;请输入要插入的元素:&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">                ElemType e;</span><br><span class="line">                <span class="built_in">cin</span>&gt;&gt;e;</span><br><span class="line">                Insert(L,j,e);</span><br><span class="line">                Display(L);</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;请输入你要进行的操作：&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">6</span> :       <span class="comment">//删除指定位置的元素</span></span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;请输入要删除元素的位置:&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">                <span class="keyword">int</span> x;</span><br><span class="line">                <span class="built_in">cin</span>&gt;&gt;x;</span><br><span class="line">                Delete(L,x);</span><br><span class="line">                Display(L);</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;请输入你要进行的操作：&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">7</span> :       <span class="comment">//删除指定值的元素</span></span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;请输入要删除的元素:&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            ElemType ee;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;ee;</span><br><span class="line">            DeleteElem(L,ee);</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;请输入你要进行的操作：&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">8</span> :</span><br><span class="line">                Merger();</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;请输入你要进行的操作：&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span> :</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;您选择的操作无效,请重新选择:&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
